% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brms_model.R
\name{brms_model}
\alias{brms_model}
\title{Run a brms model}
\usage{
brms_model(
  Data,
  Response,
  FixedEffect,
  RandomEffect,
  RandomSlope,
  Chainset,
  Family,
  Seed
)
}
\arguments{
\item{Data}{A data frame containing the data - covariates should be centered to a the mean or to a meaningful zero (see Schielzeth H. 2010. Simple means to improve the interpretability of regression coefficients. Methods Ecol Evol. 1:103â€“113. doi:10.1111/j.2041-210X.2010.00012.x.).}

\item{Response}{String with the name of the column in Data containing the response variable (e.g. "mass").}

\item{FixedEffect}{String with the name of the column in Data containing the fixed effect variable (e.g. "height"). To add multiple fixed effects, use c() (e.g. c("height", "sex")).}

\item{RandomEffect}{String with the name of the column in Data containing the random effect variable (e.g. "species"). The current package version allows the use of a single random effect.}

\item{RandomSlope}{String with the name of the column in Data containing the covariate to be added as a random slope (e.g. "height"). The current package version allows the use of a single random slope.}

\item{Chainset}{String to define the number of iterations. Start with "test" (warmup=10; iter=110; thin=10; chains=2) and increase as needed until convergence: "long"(warmup=15000; iter=30000; thin=15; chains=2); "longer"(warmup=30000; iter=60000; thin=30; chains=2); "longest" (warmup=60000; iter=120000; thin=60; chains=2).}

\item{Family}{String to define the family function in the brms model. Current supported families: "gaussian", "binomial", "poisson".}

\item{Seed}{Numeric and optional. Set a seed in order to repeat the results from the model when running it more than once.}
}
\value{
Returns a brmsfit
}
\description{
Run a brms model
}
\examples{
md = dplyr::starwars

mod = VarDecomp::brms_model(Chainset = "long", 
           Response = "mass", 
           FixedEffect = c("sex","height"), 
           RandomEffect = "species", 
           RandomSlope = "height", 
           Family = "gaussian", 
           Data = md, 
          Seed = 0405)

print(mod)

plot(mod)

}
